<?php

function cod_sponsors_commerce_enable() {
  $t = get_t();

  // This function configures all existing line item types, including ours.
  commerce_line_item_configure_line_item_types();

  $revert = array(
    'cod_sponsors' => array('views_view'),
    'cod_sponsors_pages' => array('page_manager_pages'),
  );
  features_revert($revert);
}

/**
 * Implements hook_install().
 */
function cod_sponsors_commerce_install() {
  $t = get_t();
  // Create the sponsor product type. We do this here instead of a feature so we
  // Can get the price instance created.
  $product_types = commerce_product_types();
  if (empty($product_types['sponsor'])) {
    $product_type = commerce_product_ui_product_type_new();

    $product_type['type'] = 'sponsor';
    $product_type['name'] = $t('Sponsor');
    $product_type['description'] = $t('Sponsorship Products');
    $product_type['is_new'] = TRUE;

    commerce_product_ui_product_type_save($product_type, FALSE);
    commerce_price_create_instance('commerce_price', 'commerce_product', 'sponsor', $t('Price'), 0, 'calculated_sell_price');
  }

  // If a field type we know should exist isn't found, clear the Field cache.
  if (!field_info_field_types('entityreference')) {
    field_cache_clear();
  }

  // Make sure our entity info exists.
  entity_info_cache_clear();

  // Setup line item type.
  commerce_line_item_configure_line_item_type(array('type' => 'sponsorship'));
  commerce_product_line_item_configuration(array('type' => 'sponsorship'));

  // Create our fields.
  foreach (_cod_sponsors_commerce_installed_fields() as $field_name => $field_detail) {
    // Look for existing field.
    $field = field_info_field($field_name);

    if (empty($field)) {
      $field = field_create_field($field_detail);
    }
  }

  // And their instances.
  foreach (_cod_sponsors_commerce_installed_instances() as $field_name => $instance_detail) {
    // Look for existing instance.
    $instance = field_info_instance($instance_detail['entity_type'], $field_name, $instance_detail['bundle']);

    if (empty($instance)) {
      field_create_instance($instance_detail);
    }
  }
}

/**
 * Returns a structured array defining the fields created by this module.
 *
 * @return array
 *   An associative array specifying the fields we wish to add to our
 *   entities
 */
function _cod_sponsors_commerce_installed_fields() {
  $field_bases = array();
  $field_bases['field_sponsorship_node'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sponsorship_node',
    'foreign keys' => array(
      'node' => array(
        'columns' => array(
          'target_id' => 'nid',
        ),
        'table' => 'node',
      ),
    ),
    'indexes' => array(
      'target_entity' => array(
        0 => 'target_id',
      ),
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'target_bundles' => array('sponsor'),
      ),
      'handler_submit' => 'Change handler',
      'target_type' => 'node',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );
  return $field_bases;
}

/**
 * Returns a structured array defining the instances for this module
 *
 * @return array
 *   An associative array specifying the instances we wish to add to our entities
 */
function _cod_sponsors_commerce_installed_instances() {
  $t = get_t();
  $field_instances = array();
  $field_instances['field_sponsorship_node'] = array(
    'bundle' => 'sponsorship',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'entityreference',
        'settings' => array(
          'link' => TRUE,
        ),
        'type' => 'entityreference_label',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'field_sponsorship_node',
    'label' => $t('Associated sponsorship'),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 2,
    ),
  );
  return $field_instances;
}
